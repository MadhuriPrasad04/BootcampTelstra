use sqlp1;

create table manufacturers(Code int, Name varchar(30) not null, primary key(Code));
create table products( Code int, Name varchar(30) not null, Price decimal not null, Manufacturer int not null, 
primary key(Code), foreign key(Manufacturer) references Manufacturers(Code)) ENGINE = InnoDB;

show tables;

insert into manufacturers(Code, Name) values(1,'Sony');
insert into manufacturers(Code, Name) values(2,'Creative Labs');
INSERT INTO Manufacturers(Code,Name) VALUES(3,'Hewlett-Packard');
INSERT INTO Manufacturers(Code,Name) VALUES(4,'Iomega');
INSERT INTO Manufacturers(Code,Name) VALUES(5,'Fujitsu');
INSERT INTO Manufacturers(Code,Name) VALUES(6,'Winchester');

INSERT INTO Products(Code,Name,Price,Manufacturer) VALUES(1,'Hard drive',240,5);
INSERT INTO Products(Code,Name,Price,Manufacturer) VALUES(2,'Memory',120,6);
INSERT INTO Products(Code,Name,Price,Manufacturer) VALUES(3,'ZIP drive',150,4);
INSERT INTO Products(Code,Name,Price,Manufacturer) VALUES(4,'Floppy disk',5,6);
INSERT INTO Products(Code,Name,Price,Manufacturer) VALUES(5,'Monitor',240,1);
INSERT INTO Products(Code,Name,Price,Manufacturer) VALUES(6,'DVD drive',180,2);
INSERT INTO Products(Code,Name,Price,Manufacturer) VALUES(7,'CD drive',90,2);
INSERT INTO Products(Code,Name,Price,Manufacturer) VALUES(8,'Printer',270,3);
INSERT INTO Products(Code,Name,Price,Manufacturer) VALUES(9,'Toner cartridge',66,3);
INSERT INTO Products(Code,Name,Price,Manufacturer) VALUES(10,'DVD burner',180,2);

show tables;
select * from manufacturers;
select * from products;

#Q1 : Select the names of all the products in the store.
Select Name from products;
#Q2 : Select the names and the prices of all the products in the store.
Select Name, Price from products;
#Q3 : Select the name of the products with a price less than or equal to $200.
Select Name, Price from products where price <= 200;
#Q4 : Select all the products with a price between $60 and $120
Select Name, Price from products where price> 60 and price <120;
#Q5 : Select the name and price in cents (i.e., the price must be multiplied by 100
Select Name, Price, Price*100 as PriceInCents from products;
#Q6 : Compute the average price of all the products. 
Select avg(Price) from products;
#Q7 : Compute the average price of all products with manufacturer code equal to 2
Select avg(Price) from products where code=2;
#Q8 : Compute the number of products with a price larger than or equal to $180. 
Select count(*) from products where price>= 180;
#Q9 : Select the name and price of all products with a price larger than or equal to $180, and sort first by price (in descending order), and then by name (in ascending order).
Select Name, Price from products where price >=180 order by price desc, name asc;
#Q10 : Select all the data from the products, including all the data for each product's manufacturer.
select a.*, b.name from products a, manufacturers b where a.manufacturer = b.code;
#Q11 : Select the product name, price, and manufacturer name of all the products.
Select a.name, a.price, b.name from products a, manufacturers b where a.manufacturer = b.code;
#Q12 : Select the average price of each manufacturer's products, showing only the manufacturer's code.
SELECT AVG(Price), Manufacturer FROM Products GROUP BY Manufacturer;
#Q13 : Select the average price of each manufacturer's products, showing the manufacturer's name.
SELECT AVG(a.Price), b.name from products a, manufacturers b where a.manufacturer = b.code group by b.name;
#Q14: Select the names of manufacturer whose products have an average price larger than or equal to $150.
Select b.name, avg(a.price) from products a, manufacturers b where a.manufacturer = b.code group by b.name having avg(a.price)>=150;
#Q15 : Select the name and price of the cheapest product.
Select name, price from products where price= (select min(price) from products);
#Q16 : Select the name of each manufacturer along with the name and price of its most expensive product. 
select max_price_mapping.name as manu_name, max_price_mapping.price, products_with_manu_name.name as product_name
from 
    (SELECT Manufacturers.Name, MAX(Price) price
     FROM Products, Manufacturers
     WHERE Manufacturer = Manufacturers.Code
     GROUP BY Manufacturers.Name)
     as max_price_mapping
   left join
     (select products.*, manufacturers.name manu_name
      from products join manufacturers
      on (products.manufacturer = manufacturers.code))
      as products_with_manu_name
 on
   (max_price_mapping.name = products_with_manu_name.manu_name
    and
    max_price_mapping.price = products_with_manu_name.price); 
#Q17 : Add a new product: Loudspeakers, $70, manufacturer 2.
insert into Products values (11, 'Loudspeakers', 70, 2); 
#Q18 : Update the name of product 8 to "Laser Printer".
update products set name = 'Laser Printer' where code=8;
#Q19 : Apply a 10% discount to all products.
update products set price=price*0.9;
#Q20 : Apply a 10% discount to all products with a price larger than or equal to $120.
update products set price = price*0.9 where price >= 120;